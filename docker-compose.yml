version: '3.3'
services:
  server:
    build:
      context: ./packages/server/
      args:
        - APP_ENV
    # command: npm run start
    ports:
      - 3000:3000
    # volumes:
    #   - ./packages/server:/usr/src/app
    #   - ./packages/server/node_modules:/usr/src/app/node_modules/
    environment:
      APP_ENV: ${APP_ENV}
      APP_PORT: ${APP_PORT}
      DB_URL: ${DB_URL}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_ENTITY_NAME: ${DB_ENTITY_NAME}
      DB_SYNCHRONIZE: ${DB_SYNCHRONIZE}
      DB_LOGGING: ${DB_LOGGING}
      JWT_ACCESS_TOKEN_EXP_IN_SEC: ${JWT_ACCESS_TOKEN_EXP_IN_SEC}
      JWT_REFRESH_TOKEN_EXP_IN_SEC: ${JWT_REFRESH_TOKEN_EXP_IN_SEC}
      JWT_PUBLIC_KEY_BASE64: ${JWT_PUBLIC_KEY_BASE64}
      JWT_PRIVATE_KEY_BASE64: ${JWT_PRIVATE_KEY_BASE64}
      DEFAULT_ADMIN_USER_PASSWORD: ${DEFAULT_ADMIN_USER_PASSWORD}
      UPLOAD_DIR: ${UPLOAD_DIR}
      REDIS_URL: ${REDIS_URL}
    depends_on:
      - mongo
      - redis
    restart: always
  mongo:
    image: mongo
    restart: always
    volumes:
      - ./mongodb/data:/data/db
      - ./mongodb/dump:/dump
    ports:
      - 27017:27017
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongo
  redis:
    image: redis
    command: redis-server --requirepass arco666psw
    ports:
      - "6379:6379"
  admin:
    restart: always
    build:
      context: ./packages/admin/
      args:
        - APP_ENV
    ports:
      - 3002:3002
    depends_on:
      - server
  cms:
    restart: always
    build:
      context: ./packages/cms/
      args:
        - APP_ENV
    ports:
      - 3001:3001
    depends_on:
      - server
